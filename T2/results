normalização diminuiu diferença entre acurácia no conjunto de treino e teste


ruim pca = 2000
ruim pca = 1000
bom pca = 500 (45%)

pca melhor sem whiten
sem pca = 53%

se duas camadas escondidaS: aumentar número de neurônios



-----Experiment----

-- LOGISTIC REGRESSION

penalty =		'l2'
solver = 		'lbfgs' #melhor pra grande n de dados
iterations = 		50 	# Defines number of iterations
Accuracy: 0.3864

-- MULTINOMIAL
Accuracy: 0.40034


-- UMA CAMADA ESCONDIDA:

hidden_layers =		1    # 1 or 2
n_neurons_input = 	3072 # se usar pca, mudar (3072)
n_neurons = 		3800
activation = 		'relu'
final_activation = 	'sigmoid'
loss =			'categorical_crossentropy'
optimizer =		'adadelta'
Accuracy: 0.57834

activation = 		'tanh'
final_activation = 	'sigmoid'
Accuracy: 0.53302

activation = 		'softmax'
final_activation = 	'sigmoid'
Accuracy: 0.09594

activation = 		'linear'
final_activation = 	'sigmoid'
Accuracy: 0.36724

----

activation = 		'relu'
final_activation = 	'softmax'
Accuracy: 0.57808

activation = 		'tanh'
final_activation = 	'softmax'
Accuracy: 0.53188

activation = 		'sigmoid'
final_activation = 	'softmax'
Accuracy: 0.43534

activation = 		'linear'
final_activation = 	'softmax'
Accuracy: 0.36076


-- DUAS CAMADAS ESCONDIDAS:

hidden_layers =		2    # 1 or 2
n_neurons_input = 	3072 # se usar pca, mudar (3072)
n_neurons = 		3800
activation = 		'relu'
final_activation = 	'sigmoid'
loss =			'categorical_crossentropy'
optimizer =		'adadelta'
Accuracy: 0.5536

activation = 		'tanh'
final_activation = 	'sigmoid'
Accuracy: 0.55036

activation = 		'softmax'
final_activation = 	'sigmoid'
Accuracy: 0.09594

activation = 		'linear'
final_activation = 	'sigmoid'
Accuracy: 0.18814


---

activation = 		'relu'
final_activation = 	'softmax'
Accuracy: 0.57454

activation = 		'tanh'
final_activation = 	'softmax'
Accuracy: 0.54468

activation = 		'sigmoid'
final_activation = 	'softmax'
Accuracy: 0.47032

activation = 		'linear'
final_activation = 	'softmax'
Accuracy: 0.21712


100 epochs

Test loss: {0} 4.732545224
Test accuracy: {0} 0.5613


---------------- 3 hidden layers

hidden_layers =		3    # 1 or 2
n_neurons_input = 	3072 # se usar pca, mudar (3072)
n_neurons = 		3800
activation = 		'relu'
final_activation = 	'sigmoid'
loss =			'categorical_crossentropy'
optimizer =		'adadelta'

100 epochs
Accuracy: 0.5872
20 epochs
Accuracy: 0.5632

------------------- 4 hidden layers

100 epochs

Test loss: {0} 4.87543922005
Test accuracy: {0} 0.5559


--- Resultado de Teste com melhor modelo e matriz de confusão: Usando treino inteiro e teste da base Cifar10
2 camadas escondidas
0.58630000000000004
activation = 		'relu'
final_activation = 	'softmax'
20 epochs


